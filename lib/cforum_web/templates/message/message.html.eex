<div class="posting-header">
  <%= header(@conn, @thread, @message, first: @first, do_parent: assigns[:do_parent], tree: false, show_editor: true, author_link_to_message: false, plate: true) %>
  <%= if assigns[:control], do: render "votes_accept.html", Map.put(assigns, :top, true) %>
</div>

<%= unless blank?(@message.problematic_site) do %>
  <p class="problematic-site"><%= link gettext("problematic site"), to: @message.problematic_site, rel: "nofollow" %></p>
<% end %>

<div class="cf-posting-content<%= if @message.deleted, do: " deleted" %> e-content">
  <%= Cforum.MarkdownRenderer.to_html(@message, assigns[:current_user]) %>
</div>

<div class="posting-footer">
  <div class="message-links">
    <%= if present?(@message.cites) do %>
      <p class="message-cite"><%= {:safe, ngettext("This message got cited in cite %{cite_links}",
                                                   "This message got cited in cites %{cite_links}",
                                                   length(@message.cites), cite_links: cite_links(@conn, @message))} %></p>
    <% end %>

    <%= if assigns[:controls] && !@message.deleted do %>
      <div class="controls">
        <%= if may?(@conn, "message", :create, @message) do %>
          <%= default_button_link(gettext("write a new answer"), to: message_path(@conn, :new, @thread, @message), rel: "nofollow") %>

          <%= if uconf(@conn, "quote_by_default") == "button" do %>
            <%= default_button_link(gettext("write a new answer with quoting"), to: message_path(@conn, :new, @thread, @message, with_quote: "yes"), rel: "nofollow") %>
          <% end %>
        <% end %>

        <%= if show?(:mail_to_author, assigns[:current_user], @message.user) do %>
          <%= default_button_link(gettext("mail to author"), to: mail_path(@conn, :new, new_mail_params(@conn, @message)), rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "messages/retag", :retag, @message) do %>
          <%= default_button_link(gettext("retag message"), to: retag_message_path(@conn, @thread, @message), rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "messages/flag", :flag, @message) do %>
          <%= default_button_link(gettext("flag message"), to: flag_message_path(@conn, @thread, @message), rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "message", :edit, @message) do %>
          <%= default_button_link(gettext("edit message"), to: "message_path @conn, edit, @thread, @messageTODO", rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "threads/split", :split, @message) do %>
          <%= default_button_link(gettext("split thread"), to: "split_thread_path @thread, m TODO", rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "messages/open_close_vote", :new_close, @message) do %>
          <%= default_button_link(gettext("Start a close vote"), to: close_vote_path(@conn, @thread, @message), rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "messages/open_close_vote", :create_open, @message) do %>
          <%= default_button_link(gettext("Start an open vote"), to: open_vote_path(@conn, @thread, @message), rel: "nofollow") %>
        <% end %>

        <%= if may?(@conn, "messages/interesting", :interesting, @message) do %>
          <%= default_button(gettext("mark message as interesting"), to: interesting_message_path(@conn, @thread, @message), params: std_args(@conn)) %>
        <% end %>

        <%= if may?(@conn, "messages/interesting", :boring, @message) do %>
          <%= default_button(gettext("mark message as boring"), to: boring_message_path(@conn, @thread, @message), params: std_args(@conn)) %>
        <% end %>

        <%= unless Messages.parent_subscribed?(@thread, @message) do %>
          <%= if may?(@conn, "messages/subscription", :subscribe, @message) do %>
            <%= default_button(gettext("subscribe message"), to: subscribe_message_path(@conn, @thread, @message), params: std_args(@conn)) %>
          <% end %>

          <%= if may?(@conn, "messages/subscription", :unsubscribe, @message) do %>
            <%= default_button(gettext("unsubscribe message"), to: unsubscribe_message_path(@conn, @thread, @message), params: std_args(@conn)) %>
          <% end %>
        <% end %>
      </div>
    <% end %>
  </div>

  <%= if assigns[:controls], do: render "votes_accept.html", Map.put(assigns, :top, false) %>
</div>

<%= if present?(CloseVotes.get_close_vote(@message)) do %>
  <%= render "close_vote.html", Map.put(assigns, :close_vote, CloseVotes.get_close_vote(@message)) %>
<% end %>

<%= if present?(CloseVotes.get_reopen_vote(@message)) do %>
  <%= render "reopen_vote.html", Map.put(assigns, :reopen_vote, CloseVotes.get_reopen_vote(@message)) %>
<% end %>

<%= if @message.message_id == @thread.message.message_id and present?(@thread.accepted) do %>
  <h3><%= gettext("accepted answers") %></h3>

  <%= for msg <- @thread.accepted do %>
    <article class="cf-thread threadlist">
      <%= header(@conn, @thread, msg, id: false, show_votes: true) %>
    </article>
  <% end %>
<% end %>
